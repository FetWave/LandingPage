@page "/events/"
@using System.Web;
@{
    var rsvpClasses = new Dictionary<string, List<string>>
    {
        {"NA", new() { "btn-primary", "btn-outline-primary" } },
        {"Going", new() { "btn-success", "btn-outline-success" } },
        {"MaybeGoing", new() { "btn-secondary", "btn-outline-secondary" }}
    };
}

<HeadContent>
    <meta property="og:title" content="Fetwave Events" />
    <meta property="og:description" content="View Fetwave Calendar" />
</HeadContent>

<h3>Events</h3>
@if(UserId.HasValue)
{
    <button @onclick="NavCreateEvent">Create Event</button>
}


<div>
    Date
    <br />
    <span>
        <label>From Date:</label>
        <DatetimePicker OnDatetimeChangeCallback="@StartDateChange" InitialDate="@CalendarStartDate"/>
        <label>To Date:</label>
        <DatetimePicker OnDatetimeChangeCallback="@EndDateChange" InitialDate="@CalendarEndDate"/>
    </span>
</div>

<RegionSelector OnRegionChange="@GetEventsForRegion" ShowAllRegion="true"/>

<div class="container">
    @foreach(var calendarEvent in CalendarEvents ?? [])
    {
        var startTime = calendarEvent.StartDate;

        <div class="card">
            <div class="card-header">
                <div class="form-inline">
                    @if (calendarEvent.CreatedUserId!.Equals(UserId.ToString(), StringComparison.OrdinalIgnoreCase))
                    {
                        <button @onclick="(() => GotoEditEvent(calendarEvent.Unique_Id.ToString()))">Edit</button>
                    }
                </div>
            </div>
            <div class="card-body">
                <h3 class="card-title"><a href="@($"/event/{calendarEvent.Unique_Id}")">@calendarEvent.Title</a></h3>
                <div class="share">
                    <button type="button" class="btn btn-info" onclick=@($"copyToClipboard(event, 'https://www.fetwave.com/event/{calendarEvent.Unique_Id}')")>Copy Link</button>
                </div>
                <div class="eventDetails">
                    <h5><i class="bi bi-clock"></i>@($"Happening on {startTime?.DayOfWeek} {startTime:MM/dd/yyyy} at {startTime:hh:mm tt}")</h5>
                @if(!string.IsNullOrEmpty(calendarEvent.Address))
                {
                    <h5><a href="https://www.google.com/maps/search/?api=1&query=@HttpUtility.UrlEncode(calendarEvent.Address)"><i class="bi bi-map"></i>@calendarEvent.Address</a></h5>
                }
                    <p>@calendarEvent.Region?.Name, @calendarEvent.Region?.StateCode</p>
                </div>
                <p class="card-text">
                @{
                    var displayDescription = calendarEvent.Description;
                    displayDescription = displayDescription?.Substring(0, Math.Min(displayDescription.Length, 300))
                        + (displayDescription.Length > 300 ? "..." : string.Empty);
                }        
                @displayDescription
                </p>
            </div>
        </div>
    <br/>        
    }
</div>